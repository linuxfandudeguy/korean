{
  "version": 3,
  "sources": [
    "jsdelivr-header.js",
    "/npm/aromanize@0.1.5/aromanize.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "/npm/aromanize@0.1.5/aromanize.js",
  "sourceRoot": "",
  "sourcesContent": [
    "/**\n * Minified by jsDelivr using Terser v5.19.2.\n * Original file: /npm/aromanize@0.1.5/aromanize.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n",
    "/**\n\tAromanize-js\n\t@author Fajar Chandra\n\t@since 2017.12.06\n\t\n\tUNICODE TABLE REFERENCES\n\tHangul Jamo            0x3131 - 0x\n\tHangul Choseong Jaeum  0x1100 - 0x1112\n\tHangul Jungseong Moeum 0x1161 - \n\tHangul Jongseong Jaeum 0x11A8\n\tHangul Eumjeol         0xAC00\n */\nvar Aromanize = {\n\n\t////////////////////////////////////////////////////////////////////\n\t// Transliteration rules\n\t////////////////////////////////////////////////////////////////////\n\t\n\trules: {\n\t\t\n\t\thangul: {\n\t\t\t\n\t\t\t/**\n\t\t\t * Revised Romanization Transcription\n\t\t\t */\n\t\t\t'rr': {\n\t\t\t\t// Note: giyeok (0x1100) for middle moeum is different than giyeok (0x3131) for standalone jamo\n\t\t\t\tcho: {\n\t\t\t\t\t'ᄀ': 'g', 'ᄁ': 'kk',\n\t\t\t\t\t'ᄂ': 'n',\n\t\t\t\t\t'ᄃ': 'd', 'ᄄ': 'tt',\n\t\t\t\t\t'ᄅ': 'r', \n\t\t\t\t\t'ᄆ': 'm',\n\t\t\t\t\t'ᄇ': 'b', 'ᄈ': 'pp',\n\t\t\t\t\t'ᄉ': 's', 'ᄊ': 'ss',\n\t\t\t\t\t'ᄋ': '',\n\t\t\t\t\t'ᄌ': 'j', 'ᄍ': 'jj',\n\t\t\t\t\t'ᄎ': 'ch', \n\t\t\t\t\t'ᄏ': 'k', \n\t\t\t\t\t'ᄐ': 't',\n\t\t\t\t\t'ᄑ': 'p',\n\t\t\t\t\t'ᄒ': 'h'\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t// Note: ᅡ (0x1161) for middle moeum is different than ㅏ (0x314F) for standalone jamo\n\t\t\t\tjung: {\n\t\t\t\t\t'ᅡ': 'a', 'ᅢ': 'ae', 'ᅣ': 'ya', 'ᅤ': 'yae', \n\t\t\t\t\t'ᅥ': 'eo', 'ᅦ': 'e', 'ᅧ': 'yeo', 'ᅨ': 'ye', \n\t\t\t\t\t'ᅩ': 'o', 'ᅪ': 'wa', 'ᅫ': 'wae', 'ᅬ': 'oe', 'ᅭ': 'yo',\n\t\t\t\t\t'ᅮ': 'u', 'ᅯ': 'wo', 'ᅰ': 'we', 'ᅱ': 'wi', 'ᅲ': 'yu', \n\t\t\t\t\t'ᅳ': 'eu', 'ᅴ': 'eui', 'ᅵ': 'i'\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t// Note: ᆨ (0x11A8) for last jaeum (batchim) is different than ᄀ (0x1100) for first jaeum\n\t\t\t\t// also different than ㄱ (0x3131) for standalone jamo\n\t\t\t\tjong: {\n\t\t\t\t\t'ᆨ': 'k', 'ᆨᄋ': 'g', 'ᆨᄂ': 'ngn', 'ᆨᄅ': 'ngn', 'ᆨᄆ': 'ngm', 'ᆨᄒ': 'kh',\n\t\t\t\t\t'ᆩ': 'kk', 'ᆩᄋ': 'kg', 'ᆩᄂ': 'ngn', 'ᆩᄅ': 'ngn', 'ᆩᄆ': 'ngm', 'ᆩᄒ': 'kh',\n\t\t\t\t\t'ᆪ': 'k', 'ᆪᄋ': 'ks', 'ᆪᄂ': 'ngn', 'ᆪᄅ': 'ngn', 'ᆪᄆ': 'ngm', 'ᆪᄒ': 'kch', \n\t\t\t\t\t'ᆫ': 'n', 'ᆫᄅ': 'll', \n\t\t\t\t\t'ᆬ': 'n', 'ᆬᄋ': 'nj', 'ᆬᄂ': 'nn', 'ᆬᄅ': 'nn', 'ᆬᄆ': 'nm', 'ᆬㅎ': 'nch',\n\t\t\t\t\t'ᆭ': 'n', 'ᆭᄋ': 'nh', 'ᆭᄅ': 'nn', \n\t\t\t\t\t'ᆮ': 't', 'ᆮᄋ': 'd', 'ᆮᄂ': 'nn', 'ᆮᄅ': 'nn', 'ᆮᄆ': 'nm', 'ᆮᄒ': 'th', \n\t\t\t\t\t'ᆯ': 'l', 'ᆯᄋ': 'r', 'ᆯᄂ': 'll', \n\t\t\t\t\t'ᆰ': 'k', 'ᆰᄋ': 'lg', 'ᆰᄂ': 'ngn', 'ᆰᄅ': 'ngn', 'ᆰᄆ': 'ngm', 'ᆰᄒ': 'lkh',\n\t\t\t\t\t'ᆱ': 'm', 'ᆱᄋ': 'lm', 'ᆱᄂ': 'mn', 'ᆱᄅ': 'mn', 'ᆱᄆ': 'mm', 'ᆱᄒ': 'lmh', \n\t\t\t\t\t'ᆲ': 'p', 'ᆲᄋ': 'lb', 'ᆲᄂ': 'mn', 'ᆲᄅ': 'mn', 'ᆲᄆ': 'mm', 'ᆲᄒ': 'lph', \n\t\t\t\t\t'ᆳ': 't', 'ᆳᄋ': 'ls', 'ᆳᄂ': 'nn', 'ᆳᄅ': 'nn', 'ᆳᄆ': 'nm', 'ᆳᄒ': 'lsh', \n\t\t\t\t\t'ᆴ': 't', 'ᆴᄋ': 'lt', 'ᆴᄂ': 'nn', 'ᆴᄅ': 'nn', 'ᆴᄆ': 'nm', 'ᆴᄒ': 'lth', \n\t\t\t\t\t'ᆵ': 'p', 'ᆵᄋ': 'lp', 'ᆵᄂ': 'mn', 'ᆵᄅ': 'mn', 'ᆵᄆ': 'mm', 'ᆵᄒ': 'lph', \n\t\t\t\t\t'ᆶ': 'l', 'ᆶᄋ': 'lh', 'ᆶᄂ': 'll', 'ᆶᄅ': 'll', 'ᆶᄆ': 'lm', 'ᆶᄒ': 'lh',\n\t\t\t\t\t'ᆷ': 'm', 'ᆷᄅ': 'mn', \n\t\t\t\t\t'ᆸ': 'p', 'ᆸᄋ': 'b', 'ᆸᄂ': 'mn', 'ᆸᄅ': 'mn', 'ᆸᄆ': 'mm', 'ᆸᄒ': 'ph', \n\t\t\t\t\t'ᆹ': 'p', 'ᆹᄋ': 'ps', 'ᆹᄂ': 'mn', 'ᆹᄅ': 'mn', 'ᆹᄆ': 'mm', 'ᆹᄒ': 'psh', \n\t\t\t\t\t'ᆺ': 't', 'ᆺᄋ': 's', 'ᆺᄂ': 'nn', 'ᆺᄅ': 'nn', 'ᆺᄆ': 'nm', 'ᆺᄒ': 'sh', \n\t\t\t\t\t'ᆻ': 't', 'ᆻᄋ': 'ss', 'ᆻᄂ': 'tn', 'ᆻᄅ': 'tn', 'ᆻᄆ': 'nm', 'ᆻᄒ': 'th', \n\t\t\t\t\t'ᆼ': 'ng',\n\t\t\t\t\t'ᆽ': 't', 'ᆽᄋ': 'j', 'ᆽᄂ': 'nn', 'ᆽᄅ': 'nn', 'ᆽᄆ': 'nm', 'ᆽᄒ': 'ch', \n\t\t\t\t\t'ᆾ': 't', 'ᆾᄋ': 'ch', 'ᆾᄂ': 'nn', 'ᆾᄅ': 'nn', 'ᆾᄆ': 'nm', 'ᆾᄒ': 'ch', \n\t\t\t\t\t'ᆿ': 'k', 'ᆿᄋ': 'k', 'ᆿᄂ': 'ngn', 'ᆿᄅ': 'ngn', 'ᆿᄆ': 'ngm', 'ᆿᄒ': 'kh', \n\t\t\t\t\t'ᇀ': 't', 'ᇀᄋ': 't', 'ᇀᄂ': 'nn', 'ᇀᄅ': 'nn', 'ᇀᄆ': 'nm', 'ᇀᄒ': 'th', \n\t\t\t\t\t'ᇁ': 'p', 'ᇁᄋ': 'p', 'ᇁᄂ': 'mn', 'ᇁᄅ': 'mn', 'ᇁᄆ': 'mm', 'ᇁᄒ': 'ph', \n\t\t\t\t\t'ᇂ': 't', 'ᇂᄋ': 'h', 'ᇂᄂ': 'nn', 'ᇂᄅ': 'nn', 'ᇂᄆ': 'mm', 'ᇂᄒ': 't'\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * Revised Romanization Transliteration\n\t\t\t */\n\t\t\t'rr-translit': {\n\t\t\t\t// Note: giyeok (0x1100) for middle moeum is different than giyeok (0x3131) for standalone jamo\n\t\t\t\tcho: {\n\t\t\t\t\t'ᄀ': 'g', 'ᄁ': 'kk',\n\t\t\t\t\t'ᄂ': 'n',\n\t\t\t\t\t'ᄃ': 'd', 'ᄄ': 'tt',\n\t\t\t\t\t'ᄅ': 'l', \n\t\t\t\t\t'ᄆ': 'm',\n\t\t\t\t\t'ᄇ': 'b', 'ᄈ': 'pp',\n\t\t\t\t\t'ᄉ': 's', 'ᄊ': 'ss',\n\t\t\t\t\t'ᄋ': '',\n\t\t\t\t\t'ᄌ': 'j', 'ᄍ': 'jj',\n\t\t\t\t\t'ᄎ': 'ch', \n\t\t\t\t\t'ᄏ': 'k', \n\t\t\t\t\t'ᄐ': 't',\n\t\t\t\t\t'ᄑ': 'p',\n\t\t\t\t\t'ᄒ': 'h'\n\t\t\t\t},\t\t\n\t\t\t\t\n\t\t\t\t// Note: ᅡ (0x1161) for middle moeum is different than ㅏ (0x314F) for standalone jamo\n\t\t\t\tjung: {\n\t\t\t\t\t'ᅡ': 'a', 'ᅢ': 'ae', 'ᅣ': 'ya', 'ᅤ': 'yae', \n\t\t\t\t\t'ᅥ': 'eo', 'ᅦ': 'e', 'ᅧ': 'yeo', 'ᅨ': 'ye', \n\t\t\t\t\t'ᅩ': 'o', 'ᅪ': 'oa', 'ᅫ': 'oae', 'ᅬ': 'oi', 'ᅭ': 'yo',\n\t\t\t\t\t'ᅮ': 'u', 'ᅯ': 'ueo', 'ᅰ': 'ue', 'ᅱ': 'ui', 'ᅲ': 'yu', \n\t\t\t\t\t'ᅳ': 'eu', 'ᅴ': 'eui', 'ᅵ': 'i'\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t// Note: ᆨ (0x11A8) for last jaeum (batchim) is different than ᄀ (0x1100) for first jaeum\n\t\t\t\t// also different than ㄱ (0x3131) for standalone jamo\n\t\t\t\tjong: {\n\t\t\t\t\t'ᆨ': 'g', 'ᆨᄋ': 'g-',\n\t\t\t\t\t'ᆩ': 'kk', 'ᆩᄋ': 'kk-',\n\t\t\t\t\t'ᆪ': 'gs', 'ᆪᄋ': 'gs-', 'ᆪᄉ': 'gs-s', \n\t\t\t\t\t'ᆫ': 'n', 'ᆫᄋ': 'n-', \n\t\t\t\t\t'ᆬ': 'nj', 'ᆬᄋ': 'nj-', 'ᆬᄌ': 'nj-j', \n\t\t\t\t\t'ᆭ': 'nh', 'ᆭᄋ': 'nh-',\n\t\t\t\t\t'ᆮ': 'd', 'ᆮᄋ': 'd-',\n\t\t\t\t\t'ᆯ': 'l', 'ᆯᄋ': 'l-',\n\t\t\t\t\t'ᆰ': 'lg', 'ᆰᄋ': 'lg-', \n\t\t\t\t\t'ᆱ': 'lm', 'ᆱᄋ': 'lm-', \n\t\t\t\t\t'ᆲ': 'lb', 'ᆲᄋ': 'lb-', \n\t\t\t\t\t'ᆳ': 'ls', 'ᆳᄋ': 'ls-', 'ᆳᄉ': 'ls-s', \n\t\t\t\t\t'ᆴ': 'lt', 'ᆴᄋ': 'lt-', \n\t\t\t\t\t'ᆵ': 'lp', 'ᆵᄋ': 'lp-', \n\t\t\t\t\t'ᆶ': 'lh', 'ᆶᄋ': 'lh-', \n\t\t\t\t\t'ᆷ': 'm', 'ᆷᄋ': 'm-', \n\t\t\t\t\t'ᆸ': 'b', 'ᆸᄋ': 'b-', \n\t\t\t\t\t'ᆹ': 'bs', 'ᆹᄋ': 'bs-', 'ᆹᄉ': 'bs-s', \n\t\t\t\t\t'ᆺ': 's', 'ᆺᄋ': 's-', 'ᆺᄊ': 's-ss', \n\t\t\t\t\t'ᆻ': 'ss', 'ᆻᄋ': 'ss-', 'ᆻᄉ': 'ss-s', \n\t\t\t\t\t'ᆼ': 'ng', 'ᆼᄋ': 'ng-',\n\t\t\t\t\t'ᆽ': 'j', 'ᆽᄋ': 'j-', 'ᆽᄌ': 'j-j', \n\t\t\t\t\t'ᆾ': 'ch', 'ᆾᄋ': 'ch-', \n\t\t\t\t\t'ᆿ': 'k', 'ᆿᄋ': 'k-', \n\t\t\t\t\t'ᇀ': 't', 'ᇀᄋ': 't-', \n\t\t\t\t\t'ᇁ': 'p', 'ᇁᄋ': 'p-', \n\t\t\t\t\t'ᇂ': 'h', 'ᇂᄋ': 'h-'\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t'skats': {\n\t\t\t\thyphen: ' ',\n\t\t\t\t\n\t\t\t\t// Note: giyeok (0x1100) for middle moeum is different than giyeok (0x3131) for standalone jamo\n\t\t\t\tcho: {\n\t\t\t\t\t'ᄀ': 'L', 'ᄁ': 'LL',\n\t\t\t\t\t'ᄂ': 'F',\n\t\t\t\t\t'ᄃ': 'B', 'ᄄ': 'BB',\n\t\t\t\t\t'ᄅ': 'V', \n\t\t\t\t\t'ᄆ': 'M',\n\t\t\t\t\t'ᄇ': 'W', 'ᄈ': 'WW',\n\t\t\t\t\t'ᄉ': 'G', 'ᄊ': 'GG',\n\t\t\t\t\t'ᄋ': 'K',\n\t\t\t\t\t'ᄌ': 'P', 'ᄍ': 'PP',\n\t\t\t\t\t'ᄎ': 'C', \n\t\t\t\t\t'ᄏ': 'X', \n\t\t\t\t\t'ᄐ': 'Z',\n\t\t\t\t\t'ᄑ': 'O',\n\t\t\t\t\t'ᄒ': 'J',\n\t\t\t\t\t' ': '  '\n\t\t\t\t},\t\t\n\t\t\t\t\n\t\t\t\t// Note: ᅡ (0x1161) for middle moeum is different than ㅏ (0x314F) for standalone jamo\n\t\t\t\tjung: {\n\t\t\t\t\t'ᅡ': 'E', 'ᅢ': 'EU', 'ᅣ': 'I', 'ᅤ': 'IU', \n\t\t\t\t\t'ᅥ': 'T', 'ᅦ': 'TU', 'ᅧ': 'S', 'ᅨ': 'SU', \n\t\t\t\t\t'ᅩ': 'A', 'ᅪ': 'AE', 'ᅫ': 'AEU', 'ᅬ': 'AU', 'ᅭ': 'N',\n\t\t\t\t\t'ᅮ': 'H', 'ᅯ': 'HT', 'ᅰ': 'HTU', 'ᅱ': 'HU', 'ᅲ': 'R', \n\t\t\t\t\t'ᅳ': 'D', 'ᅴ': 'DU', 'ᅵ': 'U'\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t// Note: ᆨ (0x11A8) for last jaeum (batchim) is different than ᄀ (0x1100) for first jaeum\n\t\t\t\t// also different than ㄱ (0x3131) for standalone jamo\n\t\t\t\tjong: {\n\t\t\t\t\t'ᆨ': 'L', 'ᆩ': 'LL', 'ᆪ': 'LG', \n\t\t\t\t\t'ᆫ': 'F', 'ᆬ': 'FP', 'ᆭ': 'FJ', \n\t\t\t\t\t'ᆮ': 'B', \n\t\t\t\t\t'ᆯ': 'V', 'ᆰ': 'VL', 'ᆱ': 'VM', 'ᆲ': 'VW', 'ᆳ': 'VG', 'ᆴ': 'VZ', 'ᆵ': 'VO', 'ᆶ': 'VJ', \n\t\t\t\t\t'ᆷ': 'M', \n\t\t\t\t\t'ᆸ': 'W', 'ᆹ': 'WG', \n\t\t\t\t\t'ᆺ': 'G', 'ᆻ': 'GG', \n\t\t\t\t\t'ᆼ': 'K', \n\t\t\t\t\t'ᆽ': 'P', \n\t\t\t\t\t'ᆾ': 'C', \n\t\t\t\t\t'ᆿ': 'X', \n\t\t\t\t\t'ᇀ': 'Z', \n\t\t\t\t\t'ᇁ': 'O', \n\t\t\t\t\t'ᇂ': 'J'\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * Indonesian Transcription\n\t\t\t */\n\t\t\t'ebi': {\n\t\t\t\t// Note: giyeok (0x1100) for middle moeum is different than giyeok (0x3131) for standalone jamo\n\t\t\t\tcho: {\n\t\t\t\t\t'ᄀ': 'gh', 'ᄁ': 'k',\n\t\t\t\t\t'ᄂ': 'n',\n\t\t\t\t\t'ᄃ': 'dh', 'ᄄ': 't',\n\t\t\t\t\t'ᄅ': 'r', \n\t\t\t\t\t'ᄆ': 'm',\n\t\t\t\t\t'ᄇ': 'bh', 'ᄈ': 'p',\n\t\t\t\t\t'ᄉ': 's', 'ᄊ': 's',\n\t\t\t\t\t'ᄋ': '',\n\t\t\t\t\t'ᄌ': 'jh', 'ᄍ': 'c',\n\t\t\t\t\t'ᄎ': 'ch', \n\t\t\t\t\t'ᄏ': 'kh', \n\t\t\t\t\t'ᄐ': 'th',\n\t\t\t\t\t'ᄑ': 'ph',\n\t\t\t\t\t'ᄒ': 'h'\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t// Note: giyeok (0x1100) for middle moeum is different than giyeok (0x3131) for standalone jamo\n\t\t\t\tcho2: {\n\t\t\t\t\t'ᄀ': 'g', 'ᄁ': 'k',\n\t\t\t\t\t'ᄂ': 'n',\n\t\t\t\t\t'ᄃ': 'd', 'ᄄ': 't',\n\t\t\t\t\t'ᄅ': 'r', \n\t\t\t\t\t'ᄆ': 'm',\n\t\t\t\t\t'ᄇ': 'b', 'ᄈ': 'p',\n\t\t\t\t\t'ᄉ': 's', 'ᄊ': 's',\n\t\t\t\t\t'ᄋ': '',\n\t\t\t\t\t'ᄌ': 'j', 'ᄍ': 'c',\n\t\t\t\t\t'ᄎ': 'ch', \n\t\t\t\t\t'ᄏ': 'kh', \n\t\t\t\t\t'ᄐ': 'th',\n\t\t\t\t\t'ᄑ': 'ph',\n\t\t\t\t\t'ᄒ': 'h'\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t// Note: ᅡ (0x1161) for middle moeum is different than ㅏ (0x314F) for standalone jamo\n\t\t\t\tjung: {\n\t\t\t\t\t'ᅡ': 'a', 'ᅢ': 'è', 'ᅣ': 'ya', 'ᅤ': 'yè', \n\t\t\t\t\t'ᅥ': 'ö', 'ᅦ': 'é', 'ᅧ': 'yö', 'ᅨ': 'yé', \n\t\t\t\t\t'ᅩ': 'o', 'ᅪ': 'wa', 'ᅫ': 'wè', 'ᅬ': 'wé', 'ᅭ': 'yo',\n\t\t\t\t\t'ᅮ': 'u', 'ᅯ': 'wo', 'ᅰ': 'wé', 'ᅱ': 'wi', 'ᅲ': 'yu', \n\t\t\t\t\t'ᅳ': 'eu', 'ᅴ': 'eui', 'ᅵ': 'i'\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t// Note: ᆨ (0x11A8) for last jaeum (batchim) is different than ᄀ (0x1100) for first jaeum\n\t\t\t\t// also different than ㄱ (0x3131) for standalone jamo\n\t\t\t\tjong: {\n\t\t\t\t\t'ᆨ': 'k', 'ᆨᄋ': 'g', 'ᆨᄂ': 'ngn', 'ᆨᄅ': 'ngn', 'ᆨᄆ': 'ngm', 'ᆨᄒ': 'kh',\n\t\t\t\t\t'ᆩ': 'k', 'ᆩᄋ': 'kg', 'ᆩᄂ': 'ngn', 'ᆩᄅ': 'ngn', 'ᆩᄆ': 'ngm', 'ᆩᄒ': 'kh',\n\t\t\t\t\t'ᆪ': 'k', 'ᆪᄋ': 'ks', 'ᆪᄂ': 'ngn', 'ᆪᄅ': 'ngn', 'ᆪᄆ': 'ngm', 'ᆪᄒ': 'kch', \n\t\t\t\t\t'ᆫ': 'n', 'ᆫᄅ': 'll', \n\t\t\t\t\t'ᆬ': 'n', 'ᆬᄋ': 'nj', 'ᆬᄂ': 'nn', 'ᆬᄅ': 'nn', 'ᆬᄆ': 'nm', 'ᆬㅎ': 'nch',\n\t\t\t\t\t'ᆭ': 'n', 'ᆭᄋ': 'nh', 'ᆭᄅ': 'nn', \n\t\t\t\t\t'ᆮ': 't', 'ᆮᄋ': 'd', 'ᆮᄂ': 'nn', 'ᆮᄅ': 'nn', 'ᆮᄆ': 'nm', 'ᆮᄒ': 'th', \n\t\t\t\t\t'ᆯ': 'l', 'ᆯᄋ': 'r', 'ᆯᄂ': 'll', \n\t\t\t\t\t'ᆰ': 'k', 'ᆰᄋ': 'lg', 'ᆰᄂ': 'ngn', 'ᆰᄅ': 'ngn', 'ᆰᄆ': 'ngm', 'ᆰᄒ': 'lkh',\n\t\t\t\t\t'ᆱ': 'm', 'ᆱᄋ': 'lm', 'ᆱᄂ': 'mn', 'ᆱᄅ': 'mn', 'ᆱᄆ': 'mm', 'ᆱᄒ': 'lmh', \n\t\t\t\t\t'ᆲ': 'p', 'ᆲᄋ': 'lb', 'ᆲᄂ': 'mn', 'ᆲᄅ': 'mn', 'ᆲᄆ': 'mm', 'ᆲᄒ': 'lph', \n\t\t\t\t\t'ᆳ': 't', 'ᆳᄋ': 'ls', 'ᆳᄂ': 'nn', 'ᆳᄅ': 'nn', 'ᆳᄆ': 'nm', 'ᆳᄒ': 'lsh', \n\t\t\t\t\t'ᆴ': 't', 'ᆴᄋ': 'lt', 'ᆴᄂ': 'nn', 'ᆴᄅ': 'nn', 'ᆴᄆ': 'nm', 'ᆴᄒ': 'lth', \n\t\t\t\t\t'ᆵ': 'p', 'ᆵᄋ': 'lp', 'ᆵᄂ': 'mn', 'ᆵᄅ': 'mn', 'ᆵᄆ': 'mm', 'ᆵᄒ': 'lph', \n\t\t\t\t\t'ᆶ': 'l', 'ᆶᄋ': 'lh', 'ᆶᄂ': 'll', 'ᆶᄅ': 'll', 'ᆶᄆ': 'lm', 'ᆶᄒ': 'lh',\n\t\t\t\t\t'ᆷ': 'm', 'ᆷᄅ': 'mn', \n\t\t\t\t\t'ᆸ': 'p', 'ᆸᄋ': 'b', 'ᆸᄂ': 'mn', 'ᆸᄅ': 'mn', 'ᆸᄆ': 'mm', 'ᆸᄒ': 'ph', \n\t\t\t\t\t'ᆹ': 'p', 'ᆹᄋ': 'ps', 'ᆹᄂ': 'mn', 'ᆹᄅ': 'mn', 'ᆹᄆ': 'mm', 'ᆹᄒ': 'psh', \n\t\t\t\t\t'ᆺ': 't', 'ᆺᄋ': 'sh', 'ᆺᄂ': 'nn', 'ᆺᄅ': 'nn', 'ᆺᄆ': 'nm', 'ᆺᄒ': 'sh', \n\t\t\t\t\t'ᆻ': 't', 'ᆻᄋ': 's', 'ᆻᄂ': 'nn', 'ᆻᄅ': 'nn', 'ᆻᄆ': 'nm', 'ᆻᄒ': 'th', \n\t\t\t\t\t'ᆼ': 'ng',\n\t\t\t\t\t'ᆽ': 't', 'ᆽᄋ': 'j', 'ᆽᄂ': 'nn', 'ᆽᄅ': 'nn', 'ᆽᄆ': 'nm', 'ᆽᄒ': 'ch', \n\t\t\t\t\t'ᆾ': 't', 'ᆾᄋ': 'ch', 'ᆾᄂ': 'nn', 'ᆾᄅ': 'nn', 'ᆾᄆ': 'nm', 'ᆾᄒ': 'ch', \n\t\t\t\t\t'ᆿ': 'k', 'ᆿᄋ': 'k', 'ᆿᄂ': 'ngn', 'ᆿᄅ': 'ngn', 'ᆿᄆ': 'ngm', 'ᆿᄒ': 'kh', \n\t\t\t\t\t'ᇀ': 't', 'ᇀᄋ': 't', 'ᇀᄂ': 'nn', 'ᇀᄅ': 'nn', 'ᇀᄆ': 'nm', 'ᇀᄒ': 'th', 'ᇀ이': 'ch',\n\t\t\t\t\t'ᇁ': 'p', 'ᇁᄋ': 'p', 'ᇁᄂ': 'mn', 'ᇁᄅ': 'mn', 'ᇁᄆ': 'mm', 'ᇁᄒ': 'ph', \n\t\t\t\t\t'ᇂ': 't', 'ᇂᄋ': 'h', 'ᇂᄂ': 'nn', 'ᇂᄅ': 'nn', 'ᇂᄆ': 'mm', 'ᇂᄒ': 't'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\t////////////////////////////////////////////////////////////////////\n\t// Conversion methods\n\t////////////////////////////////////////////////////////////////////\n\n\t/**\n\t * Converts Hangul to Romaja\n\t * \n\t * Options/Parameters:\n\t * text      - (String) Source string.\n\t * rule      - (String) Romanization rule.\n\t *             Possible values: rr|rr-translit|skats\n\t * hyphen    - (String) Hyphenate syllables with specified characters.\n\t * \n\t * Return:\n\t * (String) Romanized string.\n\t */\n\thangulToLatin: function() { // (text, rule, hyphen)\n\t\t\n\t\t// Helper functions\n\t\t// Check if it's letter or numbers\n\t\tvar isChoseong = function(char) {\n\t\t\tif(char.charCodeAt(0) \u003E= 0x1100 && char.charCodeAt(0) \u003C= 0x1112) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\t\n\t\t// Options mapping\n\t\tvar args = {};\n\t\tif(typeof arguments[0] == 'object') {\n\t\t\targs = arguments[0];\n\t\t}\n\t\telse {\n\t\t\targs.text = arguments[0];\n\t\t\targs.rule = arguments[1];\n\t\t\targs.hyphen = arguments[2];\n\t\t}\n\t\t\n\t\tif(args.hyphen == null) {\n\t\t\targs.hyphen = '';\n\t\t}\n\t\t\n\t\tvar rulemap = this.rules.hangul.rr;\n\t\tif(args.rule != null && this.rules.hangul[args.rule] != null) {\n\t\t\trulemap = this.rules.hangul[args.rule];\n\t\t}\n\t\telse if(args.rule != null) {\n\t\t\tthrow 'Invalid rule ' + args.rule;\n\t\t}\n\t\t\n\t\tvar rom = '';\n\t\tvar curr = null, next;\n\t\tvar skipJaeum = false; // Indicates jaeum of current iteration to be skipped\n\t\tfor(var i = 0; i \u003C= args.text.length; i++) {\n\t\t\t// If next is hangul syllable, separate it into jamo\n\t\t\t// 0xAC00 is the first hangul syllable in unicode table\n\t\t\t// 0x1100 is the first hangul jaeum in unicode table\n\t\t\t// 0x1161 is the first hangul moeum in unicode table\n\t\t\t// 0x11A8 is the first hangul batchim in unicode table\n\t\t\tnextIdx = args.text.charCodeAt(i) - 0xAC00;\n\t\t\tif(!isNaN(nextIdx) && nextIdx \u003E= 0 && nextIdx \u003C= 11171) {\n\t\t\t\tnext = String.fromCharCode(Math.floor(nextIdx / 588) + 0x1100)\n\t\t\t\t\t+ String.fromCharCode(Math.floor(nextIdx % 588 / 28) + 0x1161)\n\t\t\t\t\t+ (nextIdx % 28 == 0 ? '' : String.fromCharCode(nextIdx % 28 + 0x11A7)); // Index 0 is reserved for nothing\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnext = args.text.charAt(i);\n\t\t\t}\n\t\t\t\n\t\t\t// Except for first iteration (curr is null), \n\t\t\t// Curr and next contains 2 or 3 jamo, or 1 non-hangul letter\n\t\t\tif(curr != null) {\n\t\t\t\t\n\t\t\t\tvar res = '';\n\t\t\t\t\n\t\t\t\t// Choseong Jaeum\n\t\t\t\tif(!skipJaeum) {\n\t\t\t\t\t// If not the first syllable, try cho2 if defined\n\t\t\t\t\tif(i \u003E 0 && !/\\s/.test(args.text.charAt(i-2)) && \n\t\t\t\t\t   rulemap.cho2 != undefined &&\n\t\t\t\t\t   rulemap.cho2[curr.charAt(0)] != undefined\n\t\t\t\t\t) {\n\t\t\t\t\t\tres += rulemap.cho2[curr.charAt(0)];\n\t\t\t\t\t}\n\t\t\t\t\telse if(rulemap.cho[curr.charAt(0)] != undefined) {\n\t\t\t\t\t\tres += rulemap.cho[curr.charAt(0)];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres += curr.charAt(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tskipJaeum = false;\n\t\t\t\t\n\t\t\t\t// Jungseong Moeum\n\t\t\t\tif(curr.length \u003E 1) {\n\t\t\t\t\tif(rulemap.jung[curr.charAt(1)] != undefined) {\n\t\t\t\t\t\tres += rulemap.jung[curr.charAt(1)];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres += curr.charAt(1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Add hyphen if no batchim\n\t\t\t\t\tif(curr.length == 2 && isChoseong(next.charAt(0))) {\n\t\t\t\t\t\tres += ' ';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Jongseong Jaeum (Batchim)\n\t\t\t\tif(curr.length \u003E 2) {\n\t\t\t\t\t// Changing sound with next jaeum + moeum\n\t\t\t\t\tif(rulemap.jong[curr.charAt(2) + next.charAt(0) + next.charAt(1)] != undefined) {\n\t\t\t\t\t\tres += rulemap.jong[curr.charAt(2) + next.charAt(0) + next.charAt(1)];\n\t\t\t\t\t\tskipJaeum = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// No need to add hyphen here as it's already defined\n\t\t\t\t\t}\n\t\t\t\t\t// Changing sound with next jaeum\n\t\t\t\t\telse if(rulemap.jong[curr.charAt(2) + next.charAt(0)] != undefined) {\n\t\t\t\t\t\tres += rulemap.jong[curr.charAt(2) + next.charAt(0)];\n\t\t\t\t\t\tskipJaeum = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// No need to add hyphen here as it's already defined\n\t\t\t\t\t}\n\t\t\t\t\t// Unchanging sound\n\t\t\t\t\telse if(rulemap.jong[curr.charAt(2)] != undefined) {\n\t\t\t\t\t\tres += rulemap.jong[curr.charAt(2)];\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Add hyphen\n\t\t\t\t\t\tif(isChoseong(next.charAt(0))) {\n\t\t\t\t\t\t\tres += ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres += curr.charAt(2);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Add hyphen\n\t\t\t\t\t\tif(isChoseong(next.charAt(0))) {\n\t\t\t\t\t\t\tres += ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Replace hyphen (if this is hangeul word)\n\t\t\t\tif(curr.length \u003E 1) {\n\t\t\t\t\tif(args.hyphen == '' && rulemap.hyphen != null) {\n\t\t\t\t\t\tres = res.replace(' ', rulemap.hyphen);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Soft hyphen\n\t\t\t\t\t\tres = res.replace(' ', args.hyphen);\n\t\t\t\t\t\t// Hard hyphen\n\t\t\t\t\t\tif(args.hyphen != '') {\n\t\t\t\t\t\t\tres = res.replace('-', args.hyphen);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trom += res;\n\t\t\t}\n\t\t\t\n\t\t\tcurr = next;\n\t\t}\n\t\treturn rom;\n\t},\n\t\n\t////////////////////////////////////////////////////////////////////\n\t// All-in-one converters\n\t////////////////////////////////////////////////////////////////////\n\n\t/**\n\t * Converts Hangul/Hiragana/Katakana to Romaja\n\t * \n\t * Conversion is done using default conversion rule for each script.\n\t * If you wish to specify which rule to use, use hangulToLatin(), \n\t * hiraganaToLatin(), or katakanaToLatin() function.\n\t * \n\t * Options/Parameters:\n\t * text      - (String) Source text.\n\t * rule      - (String) Romanization rule.\n\t * hyphen    - (String) Hyphenate syllables with specified characters.\n\t * \n\t * Return:\n\t * (String) Romanized string.\n\t */\n\ttoLatin: function() { // (text, rule, hyphen)\n\t\treturn this.hangulToLatin.apply(this, arguments);\n\t},\n\n\t/**\n\t * Converts Hangul/Hiragana/Katakana to Romaja\n\t * \n\t * This is an alias of toRomaja().\n\t */\n\tromanize: function() { \n\t\treturn this.toLatin.apply(this, arguments); \n\t},\n\n\t/**\n\t * Converts Romaji/Hangul/Katakana to Hiragana\n\t */\n\ttoHiragana: function(text) {\n\t\t//TODO\n\t\tthrow 'Not implemented';\n\t\treturn text;\n\t},\n\n\t/**\n\t * Converts Romaji/Hangul/Hiragana to Katakana\n\t */\n\ttoKatakana: function(text) {\n\t\t//TODO\n\t\tthrow 'Not implemented';\n\t\treturn text;\n\t},\n\n\t/**\n\t * Converts Romaji/Hiragana/Katakana to Hangul\n\t */\n\ttoHangul: function(text) {\n\t\t//TODO\n\t\tthrow 'Not implemented';\n\t\treturn text;\n\t},\n\n};\n\n////////////////////////////////////////////////////////////////////\n// String extensions\n////////////////////////////////////////////////////////////////////\n\nif((typeof AROMANIZE_EXTEND_STRING == 'undefined' || AROMANIZE_EXTEND_STRING) &&\n   (typeof document == 'undefined' || /\\?(.+&)?base(=true)?(&.+)?$/.test(document.currentScript.src) == false)\n  ) {\n\t\t\n\t// romanize()\n\tif(typeof String.prototype.romanize == 'undefined') {\n\t\tString.prototype.romanize = function() {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\targs.unshift(this.toString());\n\t\t\treturn Aromanize.toLatin.apply(Aromanize, args);\n\t\t};\n\t}\n\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Export Node.js module\n////////////////////////////////////////////////////////////////////////////////\n\nif(typeof module != 'undefined') {\n\tmodule.exports = Aromanize;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Command line interface\n////////////////////////////////////////////////////////////////////////////////\n\nif(typeof process != 'undefined' && require.main == module) {\n\t\n\t// Capture options\n\tvar script = Aromanize.toLatin;\n\tvar options = {};\n\tfor(var i = 2; i \u003C process.argv.length; i++) {\n\t\t// Script\n\t\tswitch(process.argv[i]) {\n\t\t\tcase '-r':\n\t\t\tcase '--romanize':\n\t\t\tcase '-l':\n\t\t\tcase '--latin':\n\t\t\t\tscript = Aromanize.toLatin;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tcase '-h':\n\t\t\tcase '--hangul':\n\t\t\t\tscript = Aromanize.toHangul;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tcase '-i':\n\t\t\tcase '--hiragana':\n\t\t\t\tscript = Aromanize.toHiragana;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tcase '-k':\n\t\t\tcase '--katakana':\n\t\t\t\tscript = Aromanize.toKatakana;\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\t// Options\n\t\tif(process.argv[i][0] == '-') {\n\t\t\tvar opt = process.argv[i].split('=');\n\t\t\tswitch(opt[0]) {\n\t\t\t\tdefault:\n\t\t\t\t\tif(opt[0].length \u003E 2) {\n\t\t\t\t\t\toptions[opt[0].substr(2)] = opt[1];\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Input\n\t\telse {\n\t\t\toptions['text'] = process.argv[i];\n\t\t}\n\t}\n\t\n\t// If no input provided or --help is triggered, show help\n\tif(options['text'] == null || options['--help'] != undefined) {\n\t\tconsole.log('\\n\\\nUsage:\\n\\\n  aromanize [TARGET] [OPTIONS] \u003Cinput\u003E\\n\\\n\\n\\\nExample:\\n\\\n  aromanize -r \"안녕하세요?\"\\n\\\n\\n\\\nTARGET:\\n\\\n  -r, --romanize,   \\n\\\n  -l, --latin       Converts to Latin script (Romaja).\\n\\\n\\n\\\nOPTIONS:\\n\\\n      --rule=RULE   Use specified transliteration rule.\\n\\\n      --help        Display this help message.\\n\\\n      \\n\\\nRULE:\\n\\\n  rr                Revised Romanization Transcription (default)\\n\\\n  rr-translit       Revised Romanization Transliteration\\n\\\n  skats             SKATS Coding\\n\\\n  ebi               Indonesian Transcription\\n\\\n\t\t');\n\t\tprocess.exit(0);\n\t}\n\t\n\t// Execute script\n\tconsole.log(options);\n\tconsole.log(script.call(Aromanize, options));\n}\n"
  ]
}
